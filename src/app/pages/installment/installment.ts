import { Component, OnInit } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
import { HttpClient } from '@angular/common/http';
import { inject } from '@angular/core';
import { Title, Meta } from '@angular/platform-browser';

@Component({
  selector: 'app-installment',
  standalone: true,
  imports: [CommonModule, FormsModule],
  templateUrl: './installment.html',
  styleUrl: './installment.scss',
})
export class Installment implements OnInit {
  http = inject(HttpClient);
  currentStep = 1;
  totalSteps = 4;
  showSuccessMessage = false;

  // –û—Ç–≤–µ—Ç—ã –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã
  answers = {
    creditType: '',
    term: '',
    monthlyPayment: '',
    phone: '',
    name: '',
  };

  constructor(private titleService: Title, private metaService: Meta) {}

  ngOnInit() {
    this.titleService.setTitle('–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ —Ä–∞—Å—Å—Ä–æ—á–∫–∏ –Ω–∞ –±–∞–Ω—é-–±–æ—á–∫—É –∏ –∫–≤–∞–¥—Ä–∞—Ç–Ω—É—é –±–∞–Ω—é | BANYA TUT');
    this.metaService.updateTag({
      name: 'description',
      content:
        '–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ —Ä–∞—Å—Å—Ä–æ—á–∫–∏ –Ω–∞ –±–∞–Ω—é-–±–æ—á–∫—É –∏ –∫–≤–∞–¥—Ä–∞—Ç–Ω—É—é –±–∞–Ω—é –æ—Ç BANYA TUT. –ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É –∏ –º—ã –ø–æ–¥–±–µ—Ä–µ–º –¥–ª—è –≤–∞—Å –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–µ —É—Å–ª–æ–≤–∏—è —Ä–∞—Å—Å—Ä–æ—á–∫–∏. –ë–µ–∑ –ø–µ—Ä–µ–ø–ª–∞—Ç –∏ —Å–∫—Ä—ã—Ç—ã—Ö –∫–æ–º–∏—Å—Å–∏–π.',
    });
    this.metaService.updateTag({
      name: 'keywords',
      content:
        '—Ä–∞—Å—Å—Ä–æ—á–∫–∞ –Ω–∞ –±–∞–Ω—é, –∫—Ä–µ–¥–∏—Ç –Ω–∞ –±–∞–Ω—é, —Ä–∞—Å—Å—Ä–æ—á–∫–∞ –±–∞–Ω—è-–±–æ—á–∫–∞, —Ä–∞—Å—Å—Ä–æ—á–∫–∞ –∫–≤–∞–¥—Ä–∞—Ç–Ω–∞—è –±–∞–Ω—è, –æ—Ñ–æ—Ä–º–∏—Ç—å —Ä–∞—Å—Å—Ä–æ—á–∫—É, —É—Å–ª–æ–≤–∏—è —Ä–∞—Å—Å—Ä–æ—á–∫–∏',
    });
  }

  // –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É
  nextStep() {
    if (this.currentStep < this.totalSteps) {
      this.currentStep++;
    }
  }

  // –ü–µ—Ä–µ—Ö–æ–¥ –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–º—É —à–∞–≥—É
  previousStep() {
    if (this.currentStep > 1) {
      this.currentStep--;
    }
  }

  // –í—ã–±–æ—Ä —Ç–∏–ø–∞ –∫—Ä–µ–¥–∏—Ç–∞
  selectCreditType(type: string) {
    this.answers.creditType = type;
    this.nextStep();
  }

  // –í—ã–±–æ—Ä —Å—Ä–æ–∫–∞
  selectTerm(term: string) {
    this.answers.term = term;
    this.nextStep();
  }

  // –í—ã–±–æ—Ä –µ–∂–µ–º–µ—Å—è—á–Ω–æ–π –ø–ª–∞—Ç—ã
  selectMonthlyPayment(payment: string) {
    this.answers.monthlyPayment = payment;
    this.nextStep();
  }

  // –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º—ã
  submitForm() {
    const date = new Date();
    const formattedDate = date.toLocaleString('ru-RU', {
      day: '2-digit',
      month: '2-digit',
      year: 'numeric',
      hour: '2-digit',
      minute: '2-digit',
      second: '2-digit',
    });

    const message =
      `üìù *–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞*\n\n` +
      `üìÖ –î–∞—Ç–∞: ${formattedDate}\n` +
      `üë§ –ò–º—è: ${this.answers.name}\n` +
      `üìû –ù–æ–º–µ—Ä: ${this.answers.phone}\n` +
      `üîò –§–æ—Ä–º–∞—Ç –æ–ø–ª–∞—Ç—ã: ${this.answers.creditType}\n` +
      `üí¨ –°—Ä–æ–∫: ${this.answers.term}\n` +
      `üí¨ –ï–∂–µ–º–µ—Å—è—á–Ω—ã–π –ø–ª–∞—Ç–µ–∂: ${this.answers.monthlyPayment}`;

    const url = `https://api.telegram.org/bot8409391989:AAGfNKCOk4pZP-nWHEzmRJ2JzN0EjnBcUkk/sendMessage`;

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ –æ—Å–Ω–æ–≤–Ω–æ–π —á–∞—Ç
    this.http
      .post(url, {
        chat_id: '7557882902',
        text: message,
        parse_mode: 'Markdown',
      })
      .subscribe({
        next: (response) => {
          console.log('success main chat', response);
        },
        error: (errorResponse) => {
          console.log('error main chat', errorResponse);
        },
      });

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —á–∞—Ç
    this.http
      .post(url, {
        chat_id: '5390444241',
        text: message,
        parse_mode: 'Markdown',
      })
      .subscribe({
        next: (response) => {
          console.log('success additional chat', response);
          this.showSuccessMessage = true;
          this.resetForm();
        },
        error: (errorResponse) => {
          console.log('error additional chat', errorResponse);
        },
      });
  }

  // –û–±–Ω—É–ª–µ–Ω–∏–µ —Ñ–æ—Ä–º—ã
  resetForm() {
    this.answers = {
      creditType: '',
      term: '',
      monthlyPayment: '',
      phone: '',
      name: '',
    };
    this.currentStep = 1;
  }

  // –°–∫—Ä—ã—Ç–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± —É—Å–ø–µ—Ö–µ
  hideSuccessMessage() {
    this.showSuccessMessage = false;
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞, –º–æ–∂–Ω–æ –ª–∏ –ø–µ—Ä–µ–π—Ç–∏ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É
  canProceed(): boolean {
    switch (this.currentStep) {
      case 1:
        return !!this.answers.creditType;
      case 2:
        return !!this.answers.term;
      case 3:
        return !!this.answers.monthlyPayment;
      case 4:
        return !!this.answers.phone && !!this.answers.name;
      default:
        return false;
    }
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ—Ü–µ–Ω—Ç–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è
  getProgressPercentage(): number {
    return (this.currentStep / this.totalSteps) * 100;
  }
}
